#!/bin/bash
set -euo pipefail

# Configuration
readonly SCRIPT_NAME=$(basename "$0")
readonly REMOTE_USER="root"
readonly REMOTE_HOST_ALIAS="proxmox"
readonly LOCAL_MOUNT_POINT="/mnt/proxmox"
readonly REQUIRED_HOSTNAME="amaterasu"

# Logging function
log() {
  local level="$1"
  shift
  echo "[$(date '+%Y-%m-%d %H:%M:%S')] [$level] $*"
}

# Check hostname
check_hostname() {
  if [ "$(hostname)" != "$REQUIRED_HOSTNAME" ]; then
    log "ERROR" "Must run on $REQUIRED_HOSTNAME"
    exit 1
  fi
}

# Mount the remote directory
mount_remote() {
  if mountpoint -q "$LOCAL_MOUNT_POINT"; then
    log "WARNING" "Already mounted"
    return 0
  fi

  if sshfs -o allow_other,default_permissions,reconnect "$REMOTE_USER@$REMOTE_HOST_ALIAS:/mnt" "$LOCAL_MOUNT_POINT"; then
    log "INFO" "Mount successful"
  else
    log "ERROR" "Mount failed"
    exit 1
  fi
}

# Unmount the remote directory
unmount_remote() {
  if ! mountpoint -q "$LOCAL_MOUNT_POINT"; then
    log "WARNING" "Not mounted"
    return 0
  fi

  if fusermount -u "$LOCAL_MOUNT_POINT"; then
    log "INFO" "Unmount successful"
  else
    log "ERROR" "Unmount failed"
    exit 1
  fi
}

# Main script logic
main() {
  case "${1:-help}" in
  mount | m)
    check_hostname
    wifi_name=$(iwgetid -r || echo "")
    if [[ "${wifi_name,,}" == *"3a"* ]]; then
      mount_remote
    else
      log "ERROR" "Wrong WiFi: $wifi_name"
      exit 1
    fi
    ;;
  unmount | u)
    check_hostname
    unmount_remote
    ;;
  status | s)
    check_hostname
    if mountpoint -q "$LOCAL_MOUNT_POINT"; then
      log "INFO" "Mounted"
    else
      log "INFO" "Not mounted"
    fi
    ;;
  *)
    echo "Usage: $SCRIPT_NAME [mount|unmount|status]"
    exit 1
    ;;
  esac
}

main "$@"
